(fn (data : normal) =>
    (fn centroids =>
        (fn centroidsnew =>
            (print (centroidsToString centroids))
        )
            (
loop
(
  (fn c =>
      (
        mapi
            (fn k =>
                (
                  (fn t =>
                      (
                        (fn numr => (((fst (fst t)) / numr), ((snd (fst t)) / numr)))
                            (Real.fromInt (snd t))
                      )
                  )
                      (
                        foldli
                            (fn e =>
                                if ((nth (c, (fst (fst e)))) = (fst k))
                                then
                                    ((((fst (fst (snd e))) + (fst (snd (fst e)))),
                                      ((snd (fst (snd e))) + (snd (snd (fst e))))),
                                     ((snd (snd e)) + 1))
                                else
                                    (((fst (fst (snd e))), (snd (fst (snd e)))), (snd (snd e)))
                            )
                            ((0.0, 0.0), 0)
                            data
                      )
                )
            )
            centroids
      )
  )
      (map
           (
             fst
                 (foldli
                      (fn e =>
                          if ((snd (fst e)) < (snd (snd e)))
                          then
                              (fst e)
                          else
                              (snd e)
                      )
                      (0, 999999.0)
                      (map (fn e => distance (e, p)) centroids)
                 )
           ) data
      )
) centroids 3
            )
    )
        (centroidGen 2)
)
    (fromFile ())
